/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "graphic" (version "1.4"))
(symbol
	(rect 616 328 736 440)
	(text "LPM_RAM_DQ" (rect 16 0 121 16)(font "Arial" (font_size 10)))
	(text "inst3" (rect 3 101 26 113)(font "Arial" ))
	(port
		(pt 0 56)
		(input)
		(text "inclock" (rect 20 49 58 63)(font "Arial" (font_size 8)))
		(text "inclock" (rect 20 49 58 63)(font "Arial" (font_size 8)))
		(line (pt 0 56)(pt 16 56))
	)
	(port
		(pt 0 24)
		(input)
		(text "data[LPM_WIDTH-1..0]" (rect 20 17 146 31)(font "Arial" (font_size 8)))
		(text "data[]" (rect 20 17 51 31)(font "Arial" (font_size 8)))
		(line (pt 0 24)(pt 16 24)(line_width 3))
	)
	(port
		(pt 0 40)
		(input)
		(text "address[LPM_WIDTHAD-1..0]" (rect 20 33 186 47)(font "Arial" (font_size 8)))
		(text "address[]" (rect 20 33 74 47)(font "Arial" (font_size 8)))
		(line (pt 0 40)(pt 16 40)(line_width 3))
	)
	(port
		(pt 0 88)
		(input)
		(text "we" (rect 20 81 38 95)(font "Arial" (font_size 8)))
		(text "we" (rect 20 81 38 95)(font "Arial" (font_size 8)))
		(line (pt 0 88)(pt 16 88))
	)
	(port
		(pt 0 72)
		(input)
		(text "outclock" (rect 20 65 67 79)(font "Arial" (font_size 8)))
		(text "outclock" (rect 20 65 67 79)(font "Arial" (font_size 8)))
		(line (pt 0 72)(pt 16 72))
	)
	(port
		(pt 120 56)
		(output)
		(text "q[LPM_WIDTH-1..0]" (rect 88 49 196 63)(font "Arial" (font_size 8)))
		(text "q[]" (rect 88 49 102 63)(font "Arial" (font_size 8)))
		(line (pt 104 56)(pt 120 56)(line_width 3))
	)
	(parameter
		"LPM_ADDRESS_CONTROL"
		"\"UNREGISTERED\""
		"Should the address and control ports be registered?"
		"\"REGISTERED\"" "\"UNREGISTERED\"" 
	)
	(parameter
		"LPM_FILE"
		"dataMem.mif"
		"File containing initial contents of memory array"
	)
	(parameter
		"LPM_INDATA"
		""
		"Should the write data be registered?"
		"\"REGISTERED\"" "\"UNREGISTERED\"" 
	)
	(parameter
		"LPM_NUMWORDS"
		""
		"Number of memory words, default is 2^LPM_WIDTHAD"
	)
	(parameter
		"LPM_OUTDATA"
		"\"UNREGISTERED\""
		"Should the output data be registered?"
		"\"REGISTERED\"" "\"UNREGISTERED\"" 
	)
	(parameter
		"LPM_WIDTH"
		""
		"Data width in bits, any integer > 0"
		" 1" " 2" " 3" " 4" " 5" " 6" " 7" " 8" " 9" "10" "11" "12" "13" "14" "15" "16" "20" "24" "28" "32" "40" "48" "56" "64" 
	)
	(parameter
		"LPM_WIDTHAD"
		""
		"Number of address lines, any integer > 0"
		" 1" " 2" " 3" " 4" " 5" " 6" " 7" " 8" " 9" "10" "11" "12" 
	)
	(drawing
		(line (pt 16 16)(pt 104 16))
		(line (pt 16 96)(pt 104 96))
		(line (pt 104 96)(pt 104 16))
		(line (pt 16 96)(pt 16 16))
	)
	(annotation_block (parameter)(rect 544 144 808 256))
)
(symbol
	(rect 40 304 152 400)
	(text "LPM_ROM" (rect 25 0 100 16)(font "Arial" (font_size 10)))
	(text "inst1" (rect 3 85 26 97)(font "Arial" ))
	(port
		(pt 0 24)
		(input)
		(text "address[LPM_WIDTHAD-1..0]" (rect 20 17 186 31)(font "Arial" (font_size 8)))
		(text "address[]" (rect 20 17 74 31)(font "Arial" (font_size 8)))
		(line (pt 0 24)(pt 16 24)(line_width 3))
	)
	(port
		(pt 0 40)
		(input)
		(text "inclock" (rect 20 33 58 47)(font "Arial" (font_size 8)))
		(text "inclock" (rect 20 33 58 47)(font "Arial" (font_size 8)))
		(line (pt 0 40)(pt 16 40))
	)
	(port
		(pt 0 56)
		(input)
		(text "outclock" (rect 20 49 67 63)(font "Arial" (font_size 8)))
		(text "outclock" (rect 20 49 67 63)(font "Arial" (font_size 8)))
		(line (pt 0 56)(pt 16 56))
	)
	(port
		(pt 0 72)
		(input)
		(text "memenab" (rect 20 65 74 79)(font "Arial" (font_size 8)))
		(text "memenab" (rect 20 65 74 79)(font "Arial" (font_size 8)))
		(line (pt 0 72)(pt 16 72))
	)
	(port
		(pt 112 48)
		(output)
		(text "q[LPM_WIDTH-1..0]" (rect 80 41 188 55)(font "Arial" (font_size 8)))
		(text "q[]" (rect 80 41 94 55)(font "Arial" (font_size 8)))
		(line (pt 96 48)(pt 112 48)(line_width 3))
	)
	(parameter
		"LPM_ADDRESS_CONTROL"
		"\"UNREGISTERED\""
		"Should the address and control ports be registered?"
		"\"REGISTERED\"" "\"UNREGISTERED\"" 
	)
	(parameter
		"LPM_FILE"
		"intructionMem.mif"
		"File containing initial contents of memory array"
	)
	(parameter
		"LPM_NUMWORDS"
		""
		"Number of memory words, default is 2^LPM_WIDTHAD"
	)
	(parameter
		"LPM_OUTDATA"
		"\"UNREGISTERED\""
		"Should the output data be registered?"
		"\"REGISTERED\"" "\"UNREGISTERED\"" 
	)
	(parameter
		"LPM_WIDTH"
		""
		"Data width in bits, any integer > 0"
		" 1" " 2" " 3" " 4" " 5" " 6" " 7" " 8" " 9" "10" "11" "12" "13" "14" "15" "16" "20" "24" "28" "32" "40" "48" "56" "64" 
	)
	(parameter
		"LPM_WIDTHAD"
		""
		"Number of address lines, any integer > 0"
		" 1" " 2" " 3" " 4" " 5" " 6" " 7" " 8" " 9" "10" "11" "12" 
	)
	(drawing
		(line (pt 16 16)(pt 96 16))
		(line (pt 16 80)(pt 96 80))
		(line (pt 96 80)(pt 96 16))
		(line (pt 16 80)(pt 16 16))
	)
	(annotation_block (parameter)(rect 40 192 318 290))
)
(symbol
	(rect 264 320 528 464)
	(text "subtop" (rect 5 0 38 12)(font "Arial" ))
	(text "inst" (rect 8 128 25 140)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "i_instruction[31..0]" (rect 0 0 90 12)(font "Arial" ))
		(text "i_instruction[31..0]" (rect 21 27 111 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 0 48)
		(input)
		(text "i_pcplus4[9..0]" (rect 0 0 71 12)(font "Arial" ))
		(text "i_pcplus4[9..0]" (rect 21 43 92 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "i_writeData[7..0]" (rect 0 0 80 12)(font "Arial" ))
		(text "i_writeData[7..0]" (rect 21 59 101 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "i_clk" (rect 0 0 22 12)(font "Arial" ))
		(text "i_clk" (rect 21 75 43 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80))
	)
	(port
		(pt 264 32)
		(output)
		(text "o_branchMuxOut[9..0]" (rect 0 0 108 12)(font "Arial" ))
		(text "o_branchMuxOut[9..0]" (rect 152 27 260 39)(font "Arial" ))
		(line (pt 264 32)(pt 248 32)(line_width 3))
	)
	(port
		(pt 264 48)
		(output)
		(text "o_aluOut[7..0]" (rect 0 0 69 12)(font "Arial" ))
		(text "o_aluOut[7..0]" (rect 185 43 254 55)(font "Arial" ))
		(line (pt 264 48)(pt 248 48)(line_width 3))
	)
	(port
		(pt 264 64)
		(output)
		(text "o_readData2[7..0]" (rect 0 0 88 12)(font "Arial" ))
		(text "o_readData2[7..0]" (rect 169 59 257 71)(font "Arial" ))
		(line (pt 264 64)(pt 248 64)(line_width 3))
	)
	(port
		(pt 264 80)
		(output)
		(text "o_memWrite" (rect 0 0 62 12)(font "Arial" ))
		(text "o_memWrite" (rect 191 75 253 87)(font "Arial" ))
		(line (pt 264 80)(pt 248 80))
	)
	(port
		(pt 264 96)
		(output)
		(text "o_memToReg" (rect 0 0 68 12)(font "Arial" ))
		(text "o_memToReg" (rect 186 91 254 103)(font "Arial" ))
		(line (pt 264 96)(pt 248 96))
	)
	(port
		(pt 264 112)
		(output)
		(text "o_memRead" (rect 0 0 62 12)(font "Arial" ))
		(text "o_memRead" (rect 191 107 253 119)(font "Arial" ))
		(line (pt 264 112)(pt 248 112))
	)
	(drawing
		(rectangle (rect 16 16 248 128))
	)
)
(symbol
	(rect 40 504 192 616)
	(text "CLA_top" (rect 5 0 47 12)(font "Arial" ))
	(text "inst2" (rect 8 96 31 108)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "A[9..0]" (rect 0 0 33 12)(font "Arial" ))
		(text "A[9..0]" (rect 21 27 54 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 0 48)
		(input)
		(text "B[9..0]" (rect 0 0 33 12)(font "Arial" ))
		(text "B[9..0]" (rect 21 43 54 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "Cin" (rect 0 0 16 12)(font "Arial" ))
		(text "Cin" (rect 21 59 37 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64))
	)
	(port
		(pt 152 32)
		(output)
		(text "S[9..0]" (rect 0 0 33 12)(font "Arial" ))
		(text "S[9..0]" (rect 104 27 137 39)(font "Arial" ))
		(line (pt 152 32)(pt 136 32)(line_width 3))
	)
	(port
		(pt 152 48)
		(output)
		(text "Cout" (rect 0 0 23 12)(font "Arial" ))
		(text "Cout" (rect 112 43 135 55)(font "Arial" ))
		(line (pt 152 48)(pt 136 48))
	)
	(drawing
		(rectangle (rect 16 16 136 96))
	)
)
(symbol
	(rect 800 336 984 448)
	(text "mux2to1_8bit" (rect 5 0 71 12)(font "Arial" ))
	(text "inst4" (rect 8 96 31 108)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "i_0[7..0]" (rect 0 0 40 12)(font "Arial" ))
		(text "i_0[7..0]" (rect 21 27 61 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 0 48)
		(input)
		(text "i_1[7..0]" (rect 0 0 40 12)(font "Arial" ))
		(text "i_1[7..0]" (rect 21 43 61 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "i_select" (rect 0 0 37 12)(font "Arial" ))
		(text "i_select" (rect 21 59 58 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64))
	)
	(port
		(pt 184 32)
		(output)
		(text "o_output[7..0]" (rect 0 0 68 12)(font "Arial" ))
		(text "o_output[7..0]" (rect 106 27 174 39)(font "Arial" ))
		(line (pt 184 32)(pt 168 32)(line_width 3))
	)
	(drawing
		(rectangle (rect 16 16 168 96))
	)
)
(connector
	(pt 264 368)
	(pt 224 368)
	(bus)
)
(connector
	(pt 224 368)
	(pt 224 536)
	(bus)
)
(connector
	(pt 192 536)
	(pt 224 536)
	(bus)
)
(connector
	(pt 576 304)
	(pt 576 368)
	(bus)
)
(connector
	(pt 576 304)
	(pt 776 304)
	(bus)
)
(connector
	(pt 800 368)
	(pt 776 368)
	(bus)
)
(connector
	(pt 776 368)
	(pt 776 304)
	(bus)
)
(connector
	(pt 528 416)
	(pt 560 416)
)
(connector
	(pt 560 416)
	(pt 560 464)
)
(connector
	(pt 800 400)
	(pt 776 400)
)
(connector
	(pt 776 400)
	(pt 776 464)
)
(connector
	(pt 560 464)
	(pt 776 464)
)
(connector
	(pt 800 384)
	(pt 736 384)
	(bus)
)
(connector
	(pt 528 400)
	(pt 576 400)
)
(connector
	(pt 576 400)
	(pt 576 416)
)
(connector
	(pt 616 416)
	(pt 576 416)
)
(connector
	(pt 528 384)
	(pt 592 384)
	(bus)
)
(connector
	(pt 592 384)
	(pt 592 352)
	(bus)
)
(connector
	(pt 592 352)
	(pt 616 352)
	(bus)
)
(connector
	(pt 528 368)
	(pt 576 368)
	(bus)
)
(connector
	(pt 576 368)
	(pt 616 368)
	(bus)
)
(connector
	(pt 984 368)
	(pt 1000 368)
	(bus)
)
(connector
	(pt 1000 504)
	(pt 1000 368)
	(bus)
)
(connector
	(pt 1000 504)
	(pt 248 504)
	(bus)
)
(connector
	(pt 248 504)
	(pt 248 384)
	(bus)
)
(connector
	(pt 264 384)
	(pt 248 384)
	(bus)
)
(connector
	(pt 264 352)
	(pt 152 352)
	(bus)
)
(junction (pt 576 368))
